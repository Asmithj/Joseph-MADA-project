---
title: " EDA_ Manuscript"
date: "2025-02-23"
output: html_document
---




```{r}
# Load Required Libraries

# Path management
library(here)               # File path handling

# Data manipulation and wrangling
library(dplyr)              # Data manipulation
library(tidyverse)          # Core tidyverse packages (ggplot2, readr, etc.)
library(janitor)            # Clean column names
library(skimr)              # Quick data summaries
library(lubridate)          # Date/time handling
library(forcats)            # Categorical variable tools

# Visualization
library(ggplot2)            # Data visualization
library(ggpubr)             # Publication-ready plots

# Tables and reporting
library(gtsummary)          # Summary tables
library(gt)                 # Advanced table formatting
library(knitr)              # Report generation
library(kableExtra)         # Enhanced markdown tables

# Data exploration & preparation
library(Amelia)             # Missing-data visualization
library(pwr)                # Power analysis
library(DiagrammeR)         # Diagrams and flowcharts

# Survival analysis
library(survival)           # Survival models
library(survminer)          # Survival plots

# Model effects & outputs
library(ggeffects)          # Marginal effects extraction
library(broom)              # Tidy model outputs

# Machine learning & modeling
library(tidymodels)         # Modeling framework (recipes, parsnip, workflows, tune, yardstick, rsample)
library(themis)             # Class-imbalance sampling (e.g., SMOTE)
library(dials)              # Parameter tuning grids
library(ranger)             # Random forest engine
library(xgboost)            # Gradient boosting engine
library(generalhoslem)
library(ResourceSelection)
library(rms)

```




*Data Import*

```{r summary-numerics, message=FALSE, warning=FALSE}
library(tidyverse)      

# 1) import your cleaned data as a tibble
promo_data_clean <- read_csv(
  here("data", "clean", "PROMO_Data_clean.csv"),
  show_col_types = FALSE
)

# 2) now explicitly call dplyr::select() so there’s no ambiguity
promo_data_clean %>%
  dplyr::select(where(is.numeric)) %>%
  summary()

```



*Initial Inspection*

```{r}
# Check column names
colnames(promo_data_clean)

# Basic structure
str(promo_data_clean)

# Quick look at first few rows
head(promo_data_clean)

# Overview of missing data
skimr::skim(promo_data_clean)

# Count total missing values per column
promo_data_clean %>% 
  summarise(across(everything(), ~sum(is.na(.))))

```



```{r}
colnames(promo_data_clean)
```

```{r}
names(promo_data_clean)
```




*Summary Statistics*
Numeric Variables
```{r}
# make sure dplyr is loaded
library(dplyr)

# explicitly call dplyr::select()
promo_data_clean %>%
  dplyr::select(where(is.numeric)) %>%
  summary()

```


*Categorical Variables*
```{r}
library(purrr)

promo_data_clean %>%
  dplyr::select(where(is.character)) %>%
  map(~ table(.))

```



*Missing Data Visualization*
```{r}
# Visualizing missing data pattern
naniar::vis_miss(promo_data_clean)

```
















*Univariate Plots*
Numeric Variables
```{r}
# 0) load the necessary tidyverse packages
library(tidyverse)   # brings in dplyr, tidyr, ggplot2, purrr, etc.

# 1) read your data (if you haven’t already)
promo_data_clean <- read_csv(
  here("data", "clean", "PROMO_Data_clean.csv"),
  show_col_types = FALSE
)

# 2) select only the numerics, reshape, and plot
promo_data_clean %>%
  dplyr::select(where(is.numeric)) %>%             # force dplyr::select
  tidyr::pivot_longer(                              # modern replacement for gather()
    cols      = everything(),
    names_to  = "variable",
    values_to = "value"
  ) %>%
  ggplot(aes(x = value)) +
    geom_histogram(bins = 30) +
    facet_wrap(~ variable, scales = "free") +
    theme_minimal()

```








*Boxplot of Birthweight by IPTp Treatment Arm*

```{r}
ggplot(promo_data_clean, aes(x = study_arm, y = birth_weight, fill = study_arm)) +
  geom_boxplot(alpha = 0.7) +
  labs(title = "Birthweight by IPTp Treatment Arm",
       x = "Treatment Arm",
       y = "Birthweight (kg)") +
  theme_minimal() +
  theme(legend.position = "none")

```







```{r}
# Save the cleaned data (if not already saved)
write.csv(promo_data_clean, here::here("data", "clean", "PROMO_Data_clean.csv"), row.names = FALSE)

# Read in the cleaned data
promo_data_clean <- read.csv(here::here("data", "clean", "PROMO_Data_clean.csv"))

# Load necessary libraries
library(dplyr)
library(ggplot2)
library(broom)

### Data Preparation

# 1. Create a composite adverse birth outcome variable
#    Adverse outcome is defined as: 
#    - Preterm birth: preterm_births_count > 0 
#    OR stillbirth: stillbirth_bin == 1 
#    OR low birth weight: birth_weight < 2.5 kg
promo_data_clean <- promo_data_clean %>%
  mutate(low_birth_weight = ifelse(birth_weight < 2.5, 1, 0),
         adverse_birth_outcome = ifelse(preterm_births_count > 0 | stillbirth_bin == 1 | low_birth_weight == 1, 1, 0))

# 2. Create a subgroup variable for maternal age (<25 years vs. >=25 years)
promo_data_clean <- promo_data_clean %>%
  mutate(age_group = ifelse(age_at_enrollment_years < 25, "Young", "Older"))

### Research Question 1: 
### "Does the type of IPTp regimen modify the association between malaria episode frequency and adverse birth outcomes in Ugandan pregnant women?"

# Fit a logistic regression model with an interaction between total malaria episodes and study_arm
model_interaction <- glm(adverse_birth_outcome ~ total_malaria_episodes * study_arm + 
                           age_at_enrollment_years + gravidity + education_level,
                         family = binomial(link = "logit"),
                         data = promo_data_clean)

# Summarize and tidy the model output (exponentiating coefficients to yield odds ratios)
summary(model_interaction)
tidy_model_interaction <- tidy(model_interaction, exponentiate = TRUE, conf.int = TRUE)
print(tidy_model_interaction)

### Research Question 2: 
### "Among younger Ugandan pregnant women, is increased gravidity associated with a reduced risk of adverse birth outcomes?"

# Subset the data for young mothers (age < 25)
young_mothers <- promo_data_clean %>% filter(age_group == "Young")

# Fit a logistic regression model within the young mothers subgroup 
# to examine the association between gravidity and adverse birth outcomes
model_gravidity_young <- glm(adverse_birth_outcome ~ gravidity + total_malaria_episodes + education_level,
                             family = binomial(link = "logit"),
                             data = young_mothers)

# Summarize and tidy the subgroup model output
summary(model_gravidity_young)
tidy_model_gravidity_young <- tidy(model_gravidity_young, exponentiate = TRUE, conf.int = TRUE)
print(tidy_model_gravidity_young)

### Additional Exploratory Plots (Optional)

# Plot the distribution of total malaria episodes by study arm
ggplot(promo_data_clean, aes(x = study_arm, y = total_malaria_episodes)) +
  geom_boxplot(fill = "lightblue") +
  labs(title = "Malaria Episode Frequency by Treatment Arm", 
       x = "Treatment Arm", y = "Total Malaria Episodes")

# Plot the proportion of adverse outcomes by gravidity among young mothers
ggplot(young_mothers, aes(x = gravidity, fill = factor(adverse_birth_outcome))) +
  geom_bar(position = "fill") +
  labs(title = "Proportion of Adverse Outcomes by Gravidity (Young Mothers)",
       x = "Gravidity", y = "Proportion", fill = "Adverse Outcome")

```

















*Categorical Variables*
```{r}
# 0) load the tidyverse (includes dplyr, tidyr, ggplot2, etc.)
library(tidyverse)

# 1) read your cleaned data as a tibble
promo_data_clean <- read_csv(
  here("data", "clean", "PROMO_Data_clean.csv"),
  show_col_types = FALSE
)

# 2) select character columns, pivot longer, and plot
promo_data_clean %>%
  dplyr::select(where(is.character)) %>%        # force dplyr::select
  tidyr::pivot_longer(
    cols      = everything(),
    names_to  = "variable",
    values_to = "value"
  ) %>%
  ggplot(aes(x = value)) +
    geom_bar(fill = "lightblue", color = "black") +
    facet_wrap(~ variable, scales = "free") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))

```




