---
title: "The Impact of Malaria Episodes and Treatment Regimens on Adverse Pregnancy Outcomes in Ugandan Women"
author: "Asmith Joseph"
date: "2025-02-23"
output: html_document
---



```{r}
# **1. Load Required Libraries**
# Essential libraries for data handling, visualization, and analysis

library(here)             # Manage file paths
library(dplyr)            # Data manipulation
library(ggplot2)          # Visualization
library(tidyverse)        # Data wrangling and cleaning
library(janitor)          # Cleaning column names
library(skimr)            # Quick data summary
library(lubridate)        # Working with dates
library(readr)            # Reading CSV files
library(gtsummary)        # Creating summary tables
library(gt)               # Formatting tables
library(knitr)            # Table formatting
library(kableExtra)       # Additional table customization
library(ggpubr)           # Publication-ready plots
library(Amelia)           # Missing data visualization
library(forcats)          # Working with categorical variables
library(pwr)              # Power analysis
library(DiagrammeR)       # Flowcharts/Diagrams
library(survival)         # Survival analysis
library(survminer)        # Survival plots
```



```{r}
# Load the here package
library(here)

# Construct the relative file path and import the CSV data
promo_data <- read.csv(here("data", "raw-data", "PROMO_Data.csv"))

# View the first few rows of the data
head(promo_data)

```








## Part 2: Data Loading, Cleaning, Wrangling, and Exploratory Analysis


# Data Cleaning & Transformation
```{r}
# Display the structure of the data
str(promo_data)

# Print the column names
colnames(promo_data)

# Display the first few rows of the data
head(promo_data)

# Provide summary statistics for each variable
summary(promo_data)

```





```{r}
# Import the CSV data using here
promo_data <- read.csv(here("data", "raw-data", "PROMO_Data.csv"))

# Clean column names (all lower-case with underscores)
promo_data_clean <- promo_data %>% 
  clean_names()

# Convert date columns to Date objects
promo_data_clean <- promo_data_clean %>%
  mutate(
    enrollment_date = as.Date(enrollment_date, format = "%Y-%m-%d"),
    withdrawal_date = as.Date(withdrawal_date, format = "%Y-%m-%d"),
    child_withdrawal_date = as.Date(child_withdrawal_date, format = "%Y-%m-%d")
  )

# Convert key categorical variables to factors
promo_data_clean <- promo_data_clean %>%
  mutate(
    study_arm = as.factor(study_arm),
    fathers_consent_for_unborn_child = as.factor(fathers_consent_for_unborn_child),
    education_level = as.factor(education_level),
    alcohol_use = as.factor(alcohol_use),
    tobacco_use = as.factor(tobacco_use),
    drug_use = as.factor(drug_use),
    hypertension = as.factor(hypertension),
    diabetes_mellitus = as.factor(diabetes_mellitus),
    rheumatic_fever = as.factor(rheumatic_fever),
    cardiac_disease = as.factor(cardiac_disease),
    renal_disease = as.factor(renal_disease),
    asthma = as.factor(asthma),
    sickle_cell_disease = as.factor(sickle_cell_disease),
    placental_malaria = as.factor(placental_malaria),
    preeclampsia = as.factor(preeclampsia),
    dp_treatment = as.factor(dp_treatment)
  )

# Check for missing values in each column
missing_values <- sapply(promo_data_clean, function(x) sum(is.na(x)))
print(missing_values)

# View a summary of the cleaned data
summary(promo_data_clean)

```




```{r}
# Ensure the 'data/clean' directory exists
if (!dir.exists(here("data", "clean"))) {
  dir.create(here("data", "clean"), recursive = TRUE)
}

# Save the cleaned data
write.csv(promo_data_clean, here("data", "clean", "PROMO_Data_clean.csv"), row.names = FALSE)


# Read in the cleaned data
promo_data_clean <- read.csv(here("data", "clean", "PROMO_Data_clean.csv"))

```



```{r}
colnames(promo_data_clean)
```











# Exploratory Data Analysis
```{r}
# Create a histogram of total malaria episodes
ggplot(data = promo_data_clean, aes(x = total_malaria_episodes)) +
  geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
  labs(
    title = "Distribution of Total Malaria Episodes",
    x = "Total Malaria Episodes",
    y = "Count"
  )

```







```{r}
# Read in the cleaned data
promo_data_clean <- read.csv(here("data", "clean", "PROMO_Data_clean.csv"))

# Create a scatter plot with regression lines, faceted by study arm
ggplot(promo_data_clean, aes(x = total_malaria_episodes, y = child_1_birth_weight_kg)) +
  geom_point(alpha = 0.7, color = "darkblue") +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  facet_wrap(~ study_arm) +
  labs(
    title = "Malaria Episodes vs. Birth Weight by Study Arm",
    x = "Total Malaria Episodes",
    y = "Child Birth Weight (kg)"
  ) +
  theme_minimal() +
  theme(legend.position = "none")

```



```{r}
# Read in the cleaned data
promo_data_clean <- read.csv(here("data", "clean", "PROMO_Data_clean.csv"))

## 1. Univariate Analysis

# Histogram: Distribution of Age at Enrollment
ggplot(promo_data_clean, aes(x = age_at_enrollment_years)) +
  geom_histogram(binwidth = 5, fill = "lightblue", color = "black") +
  labs(title = "Distribution of Age at Enrollment",
       x = "Age (years)", y = "Count")

# Histogram: Distribution of Gestational Age at Enrollment
# Adjust the variable name if necessary after cleaning (e.g., gestational_age_at_enrollment_weeks)
ggplot(promo_data_clean, aes(x = gestational_age_at_enrollment_weeks)) +
  geom_histogram(binwidth = 2, fill = "lightgreen", color = "black") +
  labs(title = "Distribution of Gestational Age at Enrollment",
       x = "Gestational Age (weeks)", y = "Count")

# Histogram: Distribution of Total Malaria Episodes
ggplot(promo_data_clean, aes(x = total_malaria_episodes)) +
  geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
  labs(title = "Distribution of Total Malaria Episodes",
       x = "Total Malaria Episodes", y = "Count")

# Bar Plot: Counts of Study Arm
ggplot(promo_data_clean, aes(x = study_arm)) +
  geom_bar(fill = "skyblue") +
  labs(title = "Counts by Study Arm", x = "Study Arm", y = "Count") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Bar Plot: Counts of Adverse Outcomes (assumed to be coded as 0/1)
ggplot(promo_data_clean, aes(x = factor(adverse_outcome))) +
  geom_bar(fill = "salmon") +
  labs(title = "Counts of Adverse Outcomes",
       x = "Adverse Outcome (0 = No, 1 = Yes)", y = "Count")

## 2. Bivariate Analysis

# Boxplot: Total Malaria Episodes by Adverse Outcome
ggplot(promo_data_clean, aes(x = factor(adverse_outcome), y = total_malaria_episodes)) +
  geom_boxplot(fill = "lightgray") +
  labs(title = "Malaria Episodes by Adverse Outcome",
       x = "Adverse Outcome (0 = No, 1 = Yes)",
       y = "Total Malaria Episodes")

# Boxplot: Total Malaria Episodes by Study Arm
ggplot(promo_data_clean, aes(x = study_arm, y = total_malaria_episodes)) +
  geom_boxplot(fill = "lightblue") +
  labs(title = "Malaria Episodes by Study Arm",
       x = "Study Arm",
       y = "Total Malaria Episodes") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Contingency Table: Study Arm vs. Adverse Outcome
study_adverse_table <- table(promo_data_clean$study_arm, promo_data_clean$adverse_outcome)
print(study_adverse_table)

# Stacked Bar Plot: Proportion of Adverse Outcomes by Study Arm
ggplot(promo_data_clean, aes(x = study_arm, fill = factor(adverse_outcome))) +
  geom_bar(position = "fill") +
  labs(title = "Proportion of Adverse Outcomes by Study Arm",
       x = "Study Arm", y = "Proportion", fill = "Adverse Outcome") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

## 3. Multivariate/Correlation Analysis

# Select continuous variables of interest
continuous_vars <- promo_data_clean %>%
  select(age_at_enrollment_years, gestational_age_at_enrollment_weeks, 
         total_malaria_episodes, child_1_birth_weight_kg)

# Compute correlation matrix (using complete observations)
cor_matrix <- cor(continuous_vars, use = "complete.obs")
print(cor_matrix)

# Visualize the correlation matrix
corrplot(cor_matrix, method = "circle", type = "upper")

## 4. Visual Exploration with Scatter Plots

# Scatter Plot: Total Malaria Episodes vs. Child Birth Weight, with regression line and faceting by Study Arm
ggplot(promo_data_clean, aes(x = total_malaria_episodes, y = child_1_birth_weight_kg)) +
  geom_point(alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  facet_wrap(~ study_arm) +
  labs(title = "Malaria Episodes vs. Birth Weight by Study Arm",
       x = "Total Malaria Episodes",
       y = "Child Birth Weight (kg)")

```













```{r}
# Install the tableone package if not already installed
if (!requireNamespace("tableone", quietly = TRUE)) {
  install.packages("tableone")
}

library(tableone)
library(here)

# Read in the cleaned data
promo_data_clean <- read.csv(here("data", "clean", "PROMO_Data_clean.csv"))

# Define the variables for the demographics and baseline characteristics table.
vars <- c("age_at_enrollment_years", 
          "gestational_age_at_enrollment_weeks", 
          "education_level", 
          "gravidity", 
          "parity")


strata <- "study_arm"

# Create the TableOne object
table1 <- CreateTableOne(vars = vars, strata = strata, data = promo_data_clean, factorVars = c("education_level", "study_arm"))

# Print the table with all levels displayed
print(table1, showAllLevels = TRUE)

```





```{r}
# Create table data using tribble.
# Each row must have exactly 4 cells.
table_data <- tribble(
  ~Characteristic,                         ~Subcategory,                                         ~`Monthly SP (n=391)`,                                         ~`Monthly DP (n=391)`,
  # Age at Enrollment
  "Age, years",                            "",                                                   "23 (19–27)",                                                  "23 (19–27)",
  # Gestational Age at Enrollment overall and subcategories
  "Gestational Age at Enrollment (weeks)", "",                                                   "15.4 (13.3–17.6)",                                              "15.0 (13.4–17.1)",
  "",                                      "12–16",                                              "66 (17%)",                                                    "62 (15.8%)",
  "",                                      "17–20",                                              "164 (42.2%)",                                                 "197 (50.1%)",
  "",                                      "21–24",                                              "133 (34.2%)",                                                 "118 (30%)",
  # Gravidity overall and subcategories
  "Gravidity",                             "",                                                   "1.2 (0.9–1.7)",                                                 "1.1 (0.8–1.6)",
  "",                                      "1",                                                  "102 (26%)",                                                   "95 (24%)",
  "",                                      "2–3",                                                "180 (46%)",                                                   "190 (49%)",
  "",                                      "≥4",                                                 "109 (28%)",                                                   "106 (27%)",
  # Parity overall and subcategories
  "Parity",                                "",                                                   "2.43 (1.67)",                                                   "2.43 (1.65)",
  "",                                      "0",                                                  "140 (36%)",                                                   "145 (37%)",
  "",                                      "1–2",                                                "170 (44%)",                                                   "165 (42%)",
  "",                                      "≥3",                                                 "81 (20%)",                                                    "81 (21%)",
  # Total Malaria Episodes overall
  "Total Malaria Episodes (mean (SD))",    "",                                                   "1.06 (1.03)",                                                 "0.98 (0.95)",
  # Maternal Nutritional Status/BMI overall
  "Maternal Nutritional Status/BMI (mean (SD))", "",                                                "22.5 (3.2)",                                                  "22.8 (3.1)",
  # History of Previous Malaria Episodes overall
  "History of Previous Malaria Episodes (%)", "",                                                 "40 (10%)",                                                    "35 (9%)",
  # Maternal Education Level overall and subcategories
  "Maternal Education Level (%)",          "",                                                   "",                                                              "",
  "",                                      "A and O Level",                                      "194 (49.4%)",                                                 "187 (48.1%)",
  "",                                      "Primary",                                            "68 (17.3%)",                                                  "71 (18.3%)",
  "",                                      "Tertiary",                                           "65 (16.5%)",                                                  "61 (15.7%)",
  "",                                      "University",                                         "66 (16.8%)",                                                  "70 (18.0%)"
)

# Render the table using kableExtra
kbl(
  table_data,
  col.names = c("Characteristic", "Subcategory", "Monthly SP (n=391)", "Monthly DP (n=391)"),
  booktabs = TRUE,
  align = "lccc"
) %>%
  add_header_above(c("N = 782" = 4)) %>%
  kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover")) %>%
  # Merge sub-rows for Gestational Age at Enrollment:
  # Overall row is row 2; subcategory rows are rows 3-5
  pack_rows("Gestational Age at Enrollment (weeks)", start_row = 2, end_row = 5, indent = TRUE) %>%
  # Merge sub-rows for Gravidity:
  # Overall row is row 6; subcategory rows are rows 7-9
  pack_rows("Gravidity", start_row = 6, end_row = 9, indent = TRUE) %>%
  # Merge sub-rows for Parity:
  # Overall row is row 10; subcategory rows are rows 11-13
  pack_rows("Parity", start_row = 10, end_row = 13, indent = TRUE) %>%
  # Merge sub-rows for Maternal Education Level:
  # Overall row is row 17; subcategory rows are rows 18-21
  pack_rows("Maternal Education Level (%)", start_row = 17, end_row = 21, indent = TRUE)

```


```{r}
table(promo_data_clean$stillbirth_bin, useNA = "always")
table(promo_data_clean$stillbirth_bin, useNA = "always")
table(promo_data_clean$stillbirth)

```




## Results 


```{r}
# --- Load libraries ---
library(dplyr)
library(broom)
library(logistf)
library(knitr)
library(kableExtra)
library(tibble)

# --- Data preparation ---
promo_data_clean <- promo_data_clean %>%
  mutate(
    preterm_birth = ifelse(gestational_age_at_delivery_weeks < 37, 1, 0),
    stillbirth_bin = ifelse(stillbirth == "Yes", 1, 0)
  )

# --- Parsimonious Logistic Regression for Preterm Birth ---
model_preterm_pars <- glm(
  preterm_birth ~ total_malaria_episodes_during_pregnancy +
    age_at_enrollment_years + gravidity,
  data = promo_data_clean,
  family = binomial(link = "logit")
)

# --- Parsimonious Firth Logistic Regression for Stillbirth ---
model_stillbirth_pars <- logistf(
  stillbirth_bin ~ total_malaria_episodes_during_pregnancy +
    age_at_enrollment_years + gravidity,
  data = promo_data_clean
)

# --- Extract Preterm results ---
summary_preterm_pars <- tidy(model_preterm_pars, exponentiate = TRUE, conf.int = TRUE)

# --- Create Preterm Table ---
table_preterm <- summary_preterm_pars %>%
  select(term, estimate, conf.low, conf.high, p.value) %>%
  mutate(across(where(is.numeric), ~ round(., 2))) %>%
  mutate(term = recode(term,
                       "(Intercept)" = "Intercept",
                       "total_malaria_episodes_during_pregnancy" = "Total malaria episodes during pregnancy",
                       "age_at_enrollment_years" = "Age at enrollment (years)",
                       "gravidity" = "Gravidity"
                       ))

kable(table_preterm,
      caption = "**Table 4a. Parsimonious Logistic Regression for Preterm Birth (N = 782)**",
      col.names = c("Exposure and Adjustment Variables", "Adjusted Odds Ratio (aOR)", "95% CI (Lower)", "95% CI (Upper)", "p-value")) %>%
  kable_styling(full_width = FALSE, position = "center")

# --- Create Stillbirth Table ---
table_stillbirth <- data.frame(
  `Exposure and Adjustment Variables` = c(
    "Total malaria episodes during pregnancy",
    "Age at enrollment (years)",
    "Gravidity"
  ),
  `Adjusted Odds Ratio (aOR)` = round(exp(model_stillbirth_pars$coefficients[-1]), 2),
  `95% CI (Lower)` = round(exp(model_stillbirth_pars$ci.lower[-1]), 2),
  `95% CI (Upper)` = round(exp(model_stillbirth_pars$ci.upper[-1]), 2),
  `p-value` = signif(model_stillbirth_pars$prob[-1], 3)
)

kable(table_stillbirth,
      caption = "**Table 4b. Parsimonious Firth Logistic Regression for Stillbirth (N = 782)**") %>%
  kable_styling(full_width = FALSE, position = "center")

# --- Poisson Regression Model (Malaria Episode Rate by Treatment Arm) ---
model_poisson <- glm(
  total_malaria_episodes_during_pregnancy ~ dp_treatment + age_at_enrollment_years + gravidity + education_level,
  data = promo_data_clean,
  family = poisson(link = "log")
)

summary_poisson <- tidy(model_poisson, exponentiate = TRUE, conf.int = TRUE)

# --- Create Poisson Table ---
table_poisson <- summary_poisson %>%
  select(term, estimate, conf.low, conf.high, p.value) %>%
  mutate(across(where(is.numeric), ~ round(., 2))) %>%
  mutate(term = recode(term,
                       "(Intercept)" = "Intercept",
                       "dp_treatment" = "DP vs SP Treatment Arm",
                       "age_at_enrollment_years" = "Age at enrollment (years)",
                       "gravidity" = "Gravidity",
                       "education_levelSecondary" = "Education: Secondary",
                       "education_levelTertiary" = "Education: Tertiary",
                       "education_levelUniversity" = "Education: University"
                       ))

kable(table_poisson,
      caption = "**Table 4c. Poisson Regression – Malaria Episode Incidence by Treatment Arm (N = 782)**") %>%
  kable_styling(full_width = FALSE, position = "center")

# --- Create Summary Table ---
summary_results <- tribble(
  ~Outcome, ~Exposure, ~Effect_Measure, ~Estimate, ~`95% CI`, ~`p-value`,
  "Preterm Birth", "Total malaria episodes during pregnancy", "Adjusted Odds Ratio (aOR)", "1.04", "0.95–1.14", "0.401",
  "Stillbirth", "Total malaria episodes during pregnancy", "Adjusted Odds Ratio (aOR)", "0.96", "0.83–1.10", "0.559",
  "Malaria Episode Incidence", "DP vs SP Treatment Arm", "Incidence Rate Ratio (IRR)", "1.02", "0.92–1.12", "0.756"
)

kable(summary_results,
      caption = "**Table 4d. Summary of Parsimonious Regression Analyses for Primary Outcomes**") %>%
  kable_styling(full_width = FALSE, position = "center")

```




```{r}
colnames(promo_data_clean)
```



```{r}
# Run Poisson regression model using study_arm as the treatment variable
model_poisson <- glm(total_malaria_episodes ~ study_arm + age_at_enrollment_years + gravidity + education_level,
                     family = poisson(link = "log"), data = promo_data_clean)

# Load broom package to tidy up the model output
library(broom)
model_summary <- tidy(model_poisson, exponentiate = TRUE, conf.int = TRUE)

# Print model summary for reference (optional)
print(model_summary)

# Extract the treatment effect using the correct term name ("study_armSP")
treatment_effect <- model_summary %>% dplyr::filter(term == "study_armSP")

# Check if the treatment_effect is found; if not, stop with a message
if(nrow(treatment_effect) == 0) {
  stop("Treatment effect not found. Please verify the levels and names of the 'study_arm' variable.")
}

# Create a table with key statistics
table_poisson <- data.frame(
  "Exposure and Adjustment Variables" = "Treatment (DP vs SP)",
  "Incidence Rate Ratio (IRR)" = round(treatment_effect$estimate, 2),
  "95% CI Lower" = round(treatment_effect$conf.low, 2),
  "95% CI Upper" = round(treatment_effect$conf.high, 2),
  "p-value" = signif(treatment_effect$p.value, 3)
)

# Render the table using kable with Pandoc format
kable(
  table_poisson,
  format = "pandoc",
  caption = "*Table 4c: Effect of Treatment Arm on Malaria Episode Incidence*",
  col.names = c("Exposure and Adjustment Variables", "Incidence Rate Ratio (IRR)", "95% CI Lower", "95% CI Upper", "p-value")
) %>%
  kable_styling(full_width = FALSE, position = "center")

```




```{r}
# Create a data frame with refined variable names
table_model_refined <- data.frame(
  Variable = c("Intercept", 
               "Treatment Arm (SP vs. DP)", 
               "Age at Enrollment (years)", 
               "Gravidity", 
               "Education Level: Secondary", 
               "Education Level: Tertiary", 
               "Education Level: University"),
  IRR = c(1.6081682, 1.0552044, 0.9942737, 1.0095680, 0.9884423, 0.8900707, 1.0363703),
  `95% CI Lower` = c(1.1297705, 0.9382987, 0.9825662, 0.9675647, 0.8348897, 0.7505115, 0.8805393),
  `95% CI Upper` = c(2.280714, 1.186523, 1.006133, 1.053391, 1.170522, 1.055600, 1.220799),
  `p-value` = c(0.008021017, 0.369364418, 0.342231948, 0.660449862, 0.892661838, 0.180547176, 0.668035030)
)

# Remove the intercept row if not required for presentation
table_model_refined <- table_model_refined[table_model_refined$Variable != "Intercept", ]

# Render the table using knitr::kable without row numbers
library(knitr)
kable(
  table_model_refined,
  format = "pandoc",
  caption = "*Poisson Regression Analysis of Malaria Episode Incidence among Pregnant Women*",
  col.names = c("", "IRR", "95% CI Lower", "95% CI Upper", "p-value"),
  row.names = FALSE
)

```



```{r}
# Fit the Poisson regression model (assuming promo_data_clean is your dataset)
model_poisson <- glm(total_malaria_episodes ~ study_arm + age_at_enrollment_years + gravidity + education_level,
                     family = poisson(link = "log"), data = promo_data_clean)

# Calculate the dispersion parameter using Pearson residuals
dispersion_parameter <- sum(residuals(model_poisson, type = "pearson")^2) / model_poisson$df.residual
cat("Dispersion parameter (Pearson):", dispersion_parameter, "\n")

# Alternatively, check the ratio of the residual deviance to the degrees of freedom
ratio_deviance <- model_poisson$deviance / model_poisson$df.residual
cat("Residual deviance / DF:", ratio_deviance, "\n")

# Optionally, plot Pearson residuals vs fitted values to visually assess overdispersion
plot(fitted(model_poisson), residuals(model_poisson, type = "pearson"),
     xlab = "Fitted values", ylab = "Pearson residuals",
     main = "Residuals vs Fitted Values")
abline(h = 0, col = "red", lty = 2)

```






```{r}
# Load the MASS package for negative binomial regression
library(MASS)

# Fit a negative binomial regression model
model_nb <- glm.nb(total_malaria_episodes ~ study_arm + age_at_enrollment_years + gravidity + education_level,
                   data = promo_data_clean)

# Check the model summary
summary(model_nb)

# Tidy the model output using broom, exponentiating to get IRRs and 95% CIs
library(broom)
model_nb_summary <- tidy(model_nb, exponentiate = TRUE, conf.int = TRUE)

# Print the tidied model summary to inspect coefficients
print(model_nb_summary)

# Optionally, extract the treatment effect if needed (assuming treatment variable is 'study_armSP')
treatment_effect_nb <- model_nb_summary %>% dplyr::filter(term == "study_armSP")
print(treatment_effect_nb)

```











